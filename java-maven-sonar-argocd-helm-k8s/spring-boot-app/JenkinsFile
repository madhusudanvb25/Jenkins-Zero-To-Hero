pipeline {
  agent {
    docker {
      image 'madhuvb/maven-madhu-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    SONAR_URL = "http://13.235.113.104:9000"
    DOCKER_IMAGE = "madhuvb/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "madhusudanvb25"
  }
  stages {
    stage('Checkout') {
      steps {
        echo 'Checkout stage'
        // Uncomment when ready
        // git branch: 'main', url: 'https://github.com/madhusudanvb25/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh """
              mvn sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=$SONAR_URL
            """
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh "docker build -t ${DOCKER_IMAGE} ."
            sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
            sh "docker push ${DOCKER_IMAGE}"
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "madhusudanvb25@gmail.com"
            git config --global user.name "Madhusudan VB"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
